/**
 * Публикация.
 * Это то, что мы получаем из редактора.
 */
export type TPublicationFormat = 'prose';
export type TPublication = {
    format: TPublicationFormat;
    name?: string;   // заголовок
    content: string; // содержимое
};
/**
 * Функция обновления содержимого статьи в большом редакторе.
 * Возвращает промис разрешающийся undefined или сообщением об ошибке.
 * Большой редактор нужен в первую очередь для редактирования лонгридов,
 * т.е. публикаций с максимально допустимым набором блоков. Предполагается
 * что в процессе написания публикации пользователь может захотеть её
 * сохранить несколько раз без покидания редактора.
 */
export type TEditorSaver = (data: TPublication) => Promise<string|undefined>;
/**
 * Функция обновления содержимого статьи в кратком редакторе.
 * Краткий редактор используется для комментариев или постов, в которых не нужен
 * весь набор допустимых блоков. Предполагается что при нажатии на кнопку сохранения
 * он сохраняет публикацию и тут же меняет редактор на просмотровщик. Поэтому
 * краткому редактору не нужно знать результат сохранения.
 */
export type TNotesSaver = (data: TPublication) => void;
/**
 * Функция загрузки картинки на сервер.
 * Редактор дергает эту функцию, когда надо вставить картинку с диска.
 * Возвращает идентификатор созданного файла картинки или сообщение об ошибке.
 */
export type TImageUploader = (image: File) => Promise<number|string>;
